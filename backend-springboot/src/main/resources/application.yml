spring:
  application:
    name: sold-api

  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/sold_dev}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}

server:
  port: ${PORT:3000}
  error:
    include-message: always
    include-stacktrace: on_param

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-secret-key-change-in-production}
  expiration: 900000 # 15 minutes in milliseconds
  refresh-expiration: 604800000 # 7 days in milliseconds

# AWS S3 Configuration
aws:
  s3:
    bucket: ${AWS_S3_BUCKET:sold-images-dev}
    region: ${AWS_REGION:us-east-1}
    access-key: ${AWS_ACCESS_KEY_ID:}
    secret-key: ${AWS_SECRET_ACCESS_KEY:}

# Stripe Configuration
stripe:
  api-key: ${STRIPE_SECRET_KEY:}
  publishable-key: ${STRIPE_PUBLISHABLE_KEY:}

# OpenAI Configuration
openai:
  api-key: ${OPENAI_API_KEY:}

# CORS Configuration
cors:
  allowed-origins: ${FRONTEND_URL:http://localhost:8081,http://localhost:19006}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Logging
logging:
  level:
    com.sold.api: ${LOG_LEVEL:INFO}
    org.springframework.web: ${LOG_LEVEL:INFO}
    org.hibernate: WARN
